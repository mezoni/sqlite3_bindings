// This code was generated by a tool.
// Processing tool available at https://github.com/mezoni/binary_generator

part of sqlite3_bindings;

class Sqlite3Bindings {
  // #define FULLY_WITHIN 2    
  static const int FULLY_WITHIN = 2;    
      
  // #define NOT_WITHIN 0    
  static const int NOT_WITHIN = 0;    
      
  // #define PARTLY_WITHIN 1    
  static const int PARTLY_WITHIN = 1;    
      
  // #define SQLITE3_TEXT 3    
  static const int SQLITE3_TEXT = 3;    
      
  // #define SQLITE_ABORT 4    
  static const int SQLITE_ABORT = 4;    
      
  // #define SQLITE_ABORT_ROLLBACK (SQLITE_ABORT | (2<<8))    
  static const int SQLITE_ABORT_ROLLBACK = 516;    
      
  // #define SQLITE_ACCESS_EXISTS 0    
  static const int SQLITE_ACCESS_EXISTS = 0;    
      
  // #define SQLITE_ACCESS_READ 2    
  static const int SQLITE_ACCESS_READ = 2;    
      
  // #define SQLITE_ACCESS_READWRITE 1    
  static const int SQLITE_ACCESS_READWRITE = 1;    
      
  // #define SQLITE_ALTER_TABLE 26    
  static const int SQLITE_ALTER_TABLE = 26;    
      
  // #define SQLITE_ANALYZE 28    
  static const int SQLITE_ANALYZE = 28;    
      
  // #define SQLITE_ANY 5    
  static const int SQLITE_ANY = 5;    
      
  // #define SQLITE_ATTACH 24    
  static const int SQLITE_ATTACH = 24;    
      
  // #define SQLITE_AUTH 23    
  static const int SQLITE_AUTH = 23;    
      
  // #define SQLITE_AUTH_USER (SQLITE_AUTH | (1<<8))    
  static const int SQLITE_AUTH_USER = 279;    
      
  // #define SQLITE_BLOB 4    
  static const int SQLITE_BLOB = 4;    
      
  // #define SQLITE_BUSY 5    
  static const int SQLITE_BUSY = 5;    
      
  // #define SQLITE_BUSY_RECOVERY (SQLITE_BUSY   |  (1<<8))    
  static const int SQLITE_BUSY_RECOVERY = 261;    
      
  // #define SQLITE_BUSY_SNAPSHOT (SQLITE_BUSY   |  (2<<8))    
  static const int SQLITE_BUSY_SNAPSHOT = 517;    
      
  // #define SQLITE_CANTOPEN 14    
  static const int SQLITE_CANTOPEN = 14;    
      
  // #define SQLITE_CANTOPEN_CONVPATH (SQLITE_CANTOPEN | (4<<8))    
  static const int SQLITE_CANTOPEN_CONVPATH = 1038;    
      
  // #define SQLITE_CANTOPEN_FULLPATH (SQLITE_CANTOPEN | (3<<8))    
  static const int SQLITE_CANTOPEN_FULLPATH = 782;    
      
  // #define SQLITE_CANTOPEN_ISDIR (SQLITE_CANTOPEN | (2<<8))    
  static const int SQLITE_CANTOPEN_ISDIR = 526;    
      
  // #define SQLITE_CANTOPEN_NOTEMPDIR (SQLITE_CANTOPEN | (1<<8))    
  static const int SQLITE_CANTOPEN_NOTEMPDIR = 270;    
      
  // #define SQLITE_CHECKPOINT_FULL 1    
  static const int SQLITE_CHECKPOINT_FULL = 1;    
      
  // #define SQLITE_CHECKPOINT_PASSIVE 0    
  static const int SQLITE_CHECKPOINT_PASSIVE = 0;    
      
  // #define SQLITE_CHECKPOINT_RESTART 2    
  static const int SQLITE_CHECKPOINT_RESTART = 2;    
      
  // #define SQLITE_CHECKPOINT_TRUNCATE 3    
  static const int SQLITE_CHECKPOINT_TRUNCATE = 3;    
      
  // #define SQLITE_CONFIG_COVERING_INDEX_SCAN 20    
  static const int SQLITE_CONFIG_COVERING_INDEX_SCAN = 20;    
      
  // #define SQLITE_CONFIG_GETMALLOC 5    
  static const int SQLITE_CONFIG_GETMALLOC = 5;    
      
  // #define SQLITE_CONFIG_GETMUTEX 11     
  static const int SQLITE_CONFIG_GETMUTEX = 11;    
      
  // #define SQLITE_CONFIG_GETPCACHE 15    
  static const int SQLITE_CONFIG_GETPCACHE = 15;    
      
  // #define SQLITE_CONFIG_GETPCACHE2 19    
  static const int SQLITE_CONFIG_GETPCACHE2 = 19;    
      
  // #define SQLITE_CONFIG_HEAP 8    
  static const int SQLITE_CONFIG_HEAP = 8;    
      
  // #define SQLITE_CONFIG_LOG 16    
  static const int SQLITE_CONFIG_LOG = 16;    
      
  // #define SQLITE_CONFIG_LOOKASIDE 13    
  static const int SQLITE_CONFIG_LOOKASIDE = 13;    
      
  // #define SQLITE_CONFIG_MALLOC 4    
  static const int SQLITE_CONFIG_MALLOC = 4;    
      
  // #define SQLITE_CONFIG_MEMSTATUS 9    
  static const int SQLITE_CONFIG_MEMSTATUS = 9;    
      
  // #define SQLITE_CONFIG_MMAP_SIZE 22    
  static const int SQLITE_CONFIG_MMAP_SIZE = 22;    
      
  // #define SQLITE_CONFIG_MULTITHREAD 2    
  static const int SQLITE_CONFIG_MULTITHREAD = 2;    
      
  // #define SQLITE_CONFIG_MUTEX 10    
  static const int SQLITE_CONFIG_MUTEX = 10;    
      
  // #define SQLITE_CONFIG_PAGECACHE 7    
  static const int SQLITE_CONFIG_PAGECACHE = 7;    
      
  // #define SQLITE_CONFIG_PCACHE 14    
  static const int SQLITE_CONFIG_PCACHE = 14;    
      
  // #define SQLITE_CONFIG_PCACHE2 18    
  static const int SQLITE_CONFIG_PCACHE2 = 18;    
      
  // #define SQLITE_CONFIG_PCACHE_HDRSZ 24    
  static const int SQLITE_CONFIG_PCACHE_HDRSZ = 24;    
      
  // #define SQLITE_CONFIG_PMASZ 25    
  static const int SQLITE_CONFIG_PMASZ = 25;    
      
  // #define SQLITE_CONFIG_SCRATCH 6    
  static const int SQLITE_CONFIG_SCRATCH = 6;    
      
  // #define SQLITE_CONFIG_SERIALIZED 3    
  static const int SQLITE_CONFIG_SERIALIZED = 3;    
      
  // #define SQLITE_CONFIG_SINGLETHREAD 1    
  static const int SQLITE_CONFIG_SINGLETHREAD = 1;    
      
  // #define SQLITE_CONFIG_SQLLOG 21    
  static const int SQLITE_CONFIG_SQLLOG = 21;    
      
  // #define SQLITE_CONFIG_URI 17    
  static const int SQLITE_CONFIG_URI = 17;    
      
  // #define SQLITE_CONFIG_WIN32_HEAPSIZE 23    
  static const int SQLITE_CONFIG_WIN32_HEAPSIZE = 23;    
      
  // #define SQLITE_CONSTRAINT 19    
  static const int SQLITE_CONSTRAINT = 19;    
      
  // #define SQLITE_CONSTRAINT_CHECK (SQLITE_CONSTRAINT | (1<<8))    
  static const int SQLITE_CONSTRAINT_CHECK = 275;    
      
  // #define SQLITE_CONSTRAINT_COMMITHOOK (SQLITE_CONSTRAINT | (2<<8))    
  static const int SQLITE_CONSTRAINT_COMMITHOOK = 531;    
      
  // #define SQLITE_CONSTRAINT_FOREIGNKEY (SQLITE_CONSTRAINT | (3<<8))    
  static const int SQLITE_CONSTRAINT_FOREIGNKEY = 787;    
      
  // #define SQLITE_CONSTRAINT_FUNCTION (SQLITE_CONSTRAINT | (4<<8))    
  static const int SQLITE_CONSTRAINT_FUNCTION = 1043;    
      
  // #define SQLITE_CONSTRAINT_NOTNULL (SQLITE_CONSTRAINT | (5<<8))    
  static const int SQLITE_CONSTRAINT_NOTNULL = 1299;    
      
  // #define SQLITE_CONSTRAINT_PRIMARYKEY (SQLITE_CONSTRAINT | (6<<8))    
  static const int SQLITE_CONSTRAINT_PRIMARYKEY = 1555;    
      
  // #define SQLITE_CONSTRAINT_ROWID (SQLITE_CONSTRAINT |(10<<8))    
  static const int SQLITE_CONSTRAINT_ROWID = 2579;    
      
  // #define SQLITE_CONSTRAINT_TRIGGER (SQLITE_CONSTRAINT | (7<<8))    
  static const int SQLITE_CONSTRAINT_TRIGGER = 1811;    
      
  // #define SQLITE_CONSTRAINT_UNIQUE (SQLITE_CONSTRAINT | (8<<8))    
  static const int SQLITE_CONSTRAINT_UNIQUE = 2067;    
      
  // #define SQLITE_CONSTRAINT_VTAB (SQLITE_CONSTRAINT | (9<<8))    
  static const int SQLITE_CONSTRAINT_VTAB = 2323;    
      
  // #define SQLITE_COPY 0    
  static const int SQLITE_COPY = 0;    
      
  // #define SQLITE_CORRUPT 11    
  static const int SQLITE_CORRUPT = 11;    
      
  // #define SQLITE_CORRUPT_VTAB (SQLITE_CORRUPT | (1<<8))    
  static const int SQLITE_CORRUPT_VTAB = 267;    
      
  // #define SQLITE_CREATE_INDEX 1    
  static const int SQLITE_CREATE_INDEX = 1;    
      
  // #define SQLITE_CREATE_TABLE 2    
  static const int SQLITE_CREATE_TABLE = 2;    
      
  // #define SQLITE_CREATE_TEMP_INDEX 3    
  static const int SQLITE_CREATE_TEMP_INDEX = 3;    
      
  // #define SQLITE_CREATE_TEMP_TABLE 4    
  static const int SQLITE_CREATE_TEMP_TABLE = 4;    
      
  // #define SQLITE_CREATE_TEMP_TRIGGER 5    
  static const int SQLITE_CREATE_TEMP_TRIGGER = 5;    
      
  // #define SQLITE_CREATE_TEMP_VIEW 6    
  static const int SQLITE_CREATE_TEMP_VIEW = 6;    
      
  // #define SQLITE_CREATE_TRIGGER 7    
  static const int SQLITE_CREATE_TRIGGER = 7;    
      
  // #define SQLITE_CREATE_VIEW 8    
  static const int SQLITE_CREATE_VIEW = 8;    
      
  // #define SQLITE_CREATE_VTABLE 29    
  static const int SQLITE_CREATE_VTABLE = 29;    
      
  // #define SQLITE_DBCONFIG_ENABLE_FKEY 1002    
  static const int SQLITE_DBCONFIG_ENABLE_FKEY = 1002;    
      
  // #define SQLITE_DBCONFIG_ENABLE_TRIGGER 1003    
  static const int SQLITE_DBCONFIG_ENABLE_TRIGGER = 1003;    
      
  // #define SQLITE_DBCONFIG_LOOKASIDE 1001    
  static const int SQLITE_DBCONFIG_LOOKASIDE = 1001;    
      
  // #define SQLITE_DBSTATUS_CACHE_HIT 7    
  static const int SQLITE_DBSTATUS_CACHE_HIT = 7;    
      
  // #define SQLITE_DBSTATUS_CACHE_MISS 8    
  static const int SQLITE_DBSTATUS_CACHE_MISS = 8;    
      
  // #define SQLITE_DBSTATUS_CACHE_USED 1    
  static const int SQLITE_DBSTATUS_CACHE_USED = 1;    
      
  // #define SQLITE_DBSTATUS_CACHE_WRITE 9    
  static const int SQLITE_DBSTATUS_CACHE_WRITE = 9;    
      
  // #define SQLITE_DBSTATUS_DEFERRED_FKS 10    
  static const int SQLITE_DBSTATUS_DEFERRED_FKS = 10;    
      
  // #define SQLITE_DBSTATUS_LOOKASIDE_HIT 4    
  static const int SQLITE_DBSTATUS_LOOKASIDE_HIT = 4;    
      
  // #define SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL 6    
  static const int SQLITE_DBSTATUS_LOOKASIDE_MISS_FULL = 6;    
      
  // #define SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE 5    
  static const int SQLITE_DBSTATUS_LOOKASIDE_MISS_SIZE = 5;    
      
  // #define SQLITE_DBSTATUS_LOOKASIDE_USED 0    
  static const int SQLITE_DBSTATUS_LOOKASIDE_USED = 0;    
      
  // #define SQLITE_DBSTATUS_MAX 10    
  static const int SQLITE_DBSTATUS_MAX = 10;    
      
  // #define SQLITE_DBSTATUS_SCHEMA_USED 2    
  static const int SQLITE_DBSTATUS_SCHEMA_USED = 2;    
      
  // #define SQLITE_DBSTATUS_STMT_USED 3    
  static const int SQLITE_DBSTATUS_STMT_USED = 3;    
      
  // #define SQLITE_DELETE 9    
  static const int SQLITE_DELETE = 9;    
      
  // #define SQLITE_DETACH 25    
  static const int SQLITE_DETACH = 25;    
      
  // #define SQLITE_DETERMINISTIC 0x800    
  static const int SQLITE_DETERMINISTIC = 2048;    
      
  // #define SQLITE_DONE 101    
  static const int SQLITE_DONE = 101;    
      
  // #define SQLITE_DROP_INDEX 10    
  static const int SQLITE_DROP_INDEX = 10;    
      
  // #define SQLITE_DROP_TABLE 11    
  static const int SQLITE_DROP_TABLE = 11;    
      
  // #define SQLITE_DROP_TEMP_INDEX 12    
  static const int SQLITE_DROP_TEMP_INDEX = 12;    
      
  // #define SQLITE_DROP_TEMP_TABLE 13    
  static const int SQLITE_DROP_TEMP_TABLE = 13;    
      
  // #define SQLITE_DROP_TEMP_TRIGGER 14    
  static const int SQLITE_DROP_TEMP_TRIGGER = 14;    
      
  // #define SQLITE_DROP_TEMP_VIEW 15    
  static const int SQLITE_DROP_TEMP_VIEW = 15;    
      
  // #define SQLITE_DROP_TRIGGER 16    
  static const int SQLITE_DROP_TRIGGER = 16;    
      
  // #define SQLITE_DROP_VIEW 17    
  static const int SQLITE_DROP_VIEW = 17;    
      
  // #define SQLITE_DROP_VTABLE 30    
  static const int SQLITE_DROP_VTABLE = 30;    
      
  // #define SQLITE_EMPTY 16    
  static const int SQLITE_EMPTY = 16;    
      
  // #define SQLITE_ERROR 1    
  static const int SQLITE_ERROR = 1;    
      
  // #define SQLITE_FAIL 3    
  static const int SQLITE_FAIL = 3;    
      
  // #define SQLITE_FCNTL_BUSYHANDLER 15    
  static const int SQLITE_FCNTL_BUSYHANDLER = 15;    
      
  // #define SQLITE_FCNTL_CHUNK_SIZE 6    
  static const int SQLITE_FCNTL_CHUNK_SIZE = 6;    
      
  // #define SQLITE_FCNTL_COMMIT_PHASETWO 22    
  static const int SQLITE_FCNTL_COMMIT_PHASETWO = 22;    
      
  // #define SQLITE_FCNTL_FILE_POINTER 7    
  static const int SQLITE_FCNTL_FILE_POINTER = 7;    
      
  // #define SQLITE_FCNTL_GET_LOCKPROXYFILE 2    
  static const int SQLITE_FCNTL_GET_LOCKPROXYFILE = 2;    
      
  // #define SQLITE_FCNTL_HAS_MOVED 20    
  static const int SQLITE_FCNTL_HAS_MOVED = 20;    
      
  // #define SQLITE_FCNTL_LAST_ERRNO 4    
  static const int SQLITE_FCNTL_LAST_ERRNO = 4;    
      
  // #define SQLITE_FCNTL_LOCKSTATE 1    
  static const int SQLITE_FCNTL_LOCKSTATE = 1;    
      
  // #define SQLITE_FCNTL_MMAP_SIZE 18    
  static const int SQLITE_FCNTL_MMAP_SIZE = 18;    
      
  // #define SQLITE_FCNTL_OVERWRITE 11    
  static const int SQLITE_FCNTL_OVERWRITE = 11;    
      
  // #define SQLITE_FCNTL_PERSIST_WAL 10    
  static const int SQLITE_FCNTL_PERSIST_WAL = 10;    
      
  // #define SQLITE_FCNTL_POWERSAFE_OVERWRITE 13    
  static const int SQLITE_FCNTL_POWERSAFE_OVERWRITE = 13;    
      
  // #define SQLITE_FCNTL_PRAGMA 14    
  static const int SQLITE_FCNTL_PRAGMA = 14;    
      
  // #define SQLITE_FCNTL_RBU 26    
  static const int SQLITE_FCNTL_RBU = 26;    
      
  // #define SQLITE_FCNTL_SET_LOCKPROXYFILE 3    
  static const int SQLITE_FCNTL_SET_LOCKPROXYFILE = 3;    
      
  // #define SQLITE_FCNTL_SIZE_HINT 5    
  static const int SQLITE_FCNTL_SIZE_HINT = 5;    
      
  // #define SQLITE_FCNTL_SYNC 21    
  static const int SQLITE_FCNTL_SYNC = 21;    
      
  // #define SQLITE_FCNTL_SYNC_OMITTED 8    
  static const int SQLITE_FCNTL_SYNC_OMITTED = 8;    
      
  // #define SQLITE_FCNTL_TEMPFILENAME 16    
  static const int SQLITE_FCNTL_TEMPFILENAME = 16;    
      
  // #define SQLITE_FCNTL_TRACE 19    
  static const int SQLITE_FCNTL_TRACE = 19;    
      
  // #define SQLITE_FCNTL_VFSNAME 12    
  static const int SQLITE_FCNTL_VFSNAME = 12;    
      
  // #define SQLITE_FCNTL_WAL_BLOCK 24    
  static const int SQLITE_FCNTL_WAL_BLOCK = 24;    
      
  // #define SQLITE_FCNTL_WIN32_AV_RETRY 9    
  static const int SQLITE_FCNTL_WIN32_AV_RETRY = 9;    
      
  // #define SQLITE_FCNTL_WIN32_SET_HANDLE 23    
  static const int SQLITE_FCNTL_WIN32_SET_HANDLE = 23;    
      
  // #define SQLITE_FCNTL_ZIPVFS 25    
  static const int SQLITE_FCNTL_ZIPVFS = 25;    
      
  // #define SQLITE_FLOAT 2    
  static const int SQLITE_FLOAT = 2;    
      
  // #define SQLITE_FORMAT 24    
  static const int SQLITE_FORMAT = 24;    
      
  // #define SQLITE_FULL 13    
  static const int SQLITE_FULL = 13;    
      
  // #define SQLITE_FUNCTION 31    
  static const int SQLITE_FUNCTION = 31;    
      
  // #define SQLITE_INDEX_CONSTRAINT_EQ 2    
  static const int SQLITE_INDEX_CONSTRAINT_EQ = 2;    
      
  // #define SQLITE_INDEX_CONSTRAINT_GE 32    
  static const int SQLITE_INDEX_CONSTRAINT_GE = 32;    
      
  // #define SQLITE_INDEX_CONSTRAINT_GT 4    
  static const int SQLITE_INDEX_CONSTRAINT_GT = 4;    
      
  // #define SQLITE_INDEX_CONSTRAINT_LE 8    
  static const int SQLITE_INDEX_CONSTRAINT_LE = 8;    
      
  // #define SQLITE_INDEX_CONSTRAINT_LT 16    
  static const int SQLITE_INDEX_CONSTRAINT_LT = 16;    
      
  // #define SQLITE_INDEX_CONSTRAINT_MATCH 64    
  static const int SQLITE_INDEX_CONSTRAINT_MATCH = 64;    
      
  // #define SQLITE_INSERT 18    
  static const int SQLITE_INSERT = 18;    
      
  // #define SQLITE_INTEGER 1    
  static const int SQLITE_INTEGER = 1;    
      
  // #define SQLITE_INTERNAL 2    
  static const int SQLITE_INTERNAL = 2;    
      
  // #define SQLITE_INTERRUPT 9    
  static const int SQLITE_INTERRUPT = 9;    
      
  // #define SQLITE_IOCAP_ATOMIC 0x00000001    
  static const int SQLITE_IOCAP_ATOMIC = 1;    
      
  // #define SQLITE_IOCAP_ATOMIC16K 0x00000040    
  static const int SQLITE_IOCAP_ATOMIC16K = 64;    
      
  // #define SQLITE_IOCAP_ATOMIC1K 0x00000004    
  static const int SQLITE_IOCAP_ATOMIC1K = 4;    
      
  // #define SQLITE_IOCAP_ATOMIC2K 0x00000008    
  static const int SQLITE_IOCAP_ATOMIC2K = 8;    
      
  // #define SQLITE_IOCAP_ATOMIC32K 0x00000080    
  static const int SQLITE_IOCAP_ATOMIC32K = 128;    
      
  // #define SQLITE_IOCAP_ATOMIC4K 0x00000010    
  static const int SQLITE_IOCAP_ATOMIC4K = 16;    
      
  // #define SQLITE_IOCAP_ATOMIC512 0x00000002    
  static const int SQLITE_IOCAP_ATOMIC512 = 2;    
      
  // #define SQLITE_IOCAP_ATOMIC64K 0x00000100    
  static const int SQLITE_IOCAP_ATOMIC64K = 256;    
      
  // #define SQLITE_IOCAP_ATOMIC8K 0x00000020    
  static const int SQLITE_IOCAP_ATOMIC8K = 32;    
      
  // #define SQLITE_IOCAP_IMMUTABLE 0x00002000    
  static const int SQLITE_IOCAP_IMMUTABLE = 8192;    
      
  // #define SQLITE_IOCAP_POWERSAFE_OVERWRITE 0x00001000    
  static const int SQLITE_IOCAP_POWERSAFE_OVERWRITE = 4096;    
      
  // #define SQLITE_IOCAP_SAFE_APPEND 0x00000200    
  static const int SQLITE_IOCAP_SAFE_APPEND = 512;    
      
  // #define SQLITE_IOCAP_SEQUENTIAL 0x00000400    
  static const int SQLITE_IOCAP_SEQUENTIAL = 1024;    
      
  // #define SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN 0x00000800    
  static const int SQLITE_IOCAP_UNDELETABLE_WHEN_OPEN = 2048;    
      
  // #define SQLITE_IOERR 10    
  static const int SQLITE_IOERR = 10;    
      
  // #define SQLITE_IOERR_ACCESS (SQLITE_IOERR | (13<<8))    
  static const int SQLITE_IOERR_ACCESS = 3338;    
      
  // #define SQLITE_IOERR_BLOCKED (SQLITE_IOERR | (11<<8))    
  static const int SQLITE_IOERR_BLOCKED = 2826;    
      
  // #define SQLITE_IOERR_CHECKRESERVEDLOCK (SQLITE_IOERR | (14<<8))    
  static const int SQLITE_IOERR_CHECKRESERVEDLOCK = 3594;    
      
  // #define SQLITE_IOERR_CLOSE (SQLITE_IOERR | (16<<8))    
  static const int SQLITE_IOERR_CLOSE = 4106;    
      
  // #define SQLITE_IOERR_CONVPATH (SQLITE_IOERR | (26<<8))    
  static const int SQLITE_IOERR_CONVPATH = 6666;    
      
  // #define SQLITE_IOERR_DELETE (SQLITE_IOERR | (10<<8))    
  static const int SQLITE_IOERR_DELETE = 2570;    
      
  // #define SQLITE_IOERR_DELETE_NOENT (SQLITE_IOERR | (23<<8))    
  static const int SQLITE_IOERR_DELETE_NOENT = 5898;    
      
  // #define SQLITE_IOERR_DIR_CLOSE (SQLITE_IOERR | (17<<8))    
  static const int SQLITE_IOERR_DIR_CLOSE = 4362;    
      
  // #define SQLITE_IOERR_DIR_FSYNC (SQLITE_IOERR | (5<<8))    
  static const int SQLITE_IOERR_DIR_FSYNC = 1290;    
      
  // #define SQLITE_IOERR_FSTAT (SQLITE_IOERR | (7<<8))    
  static const int SQLITE_IOERR_FSTAT = 1802;    
      
  // #define SQLITE_IOERR_FSYNC (SQLITE_IOERR | (4<<8))    
  static const int SQLITE_IOERR_FSYNC = 1034;    
      
  // #define SQLITE_IOERR_GETTEMPPATH (SQLITE_IOERR | (25<<8))    
  static const int SQLITE_IOERR_GETTEMPPATH = 6410;    
      
  // #define SQLITE_IOERR_LOCK (SQLITE_IOERR | (15<<8))    
  static const int SQLITE_IOERR_LOCK = 3850;    
      
  // #define SQLITE_IOERR_MMAP (SQLITE_IOERR | (24<<8))    
  static const int SQLITE_IOERR_MMAP = 6154;    
      
  // #define SQLITE_IOERR_NOMEM (SQLITE_IOERR | (12<<8))    
  static const int SQLITE_IOERR_NOMEM = 3082;    
      
  // #define SQLITE_IOERR_RDLOCK (SQLITE_IOERR | (9<<8))    
  static const int SQLITE_IOERR_RDLOCK = 2314;    
      
  // #define SQLITE_IOERR_READ (SQLITE_IOERR | (1<<8))    
  static const int SQLITE_IOERR_READ = 266;    
      
  // #define SQLITE_IOERR_SEEK (SQLITE_IOERR | (22<<8))    
  static const int SQLITE_IOERR_SEEK = 5642;    
      
  // #define SQLITE_IOERR_SHMLOCK (SQLITE_IOERR | (20<<8))    
  static const int SQLITE_IOERR_SHMLOCK = 5130;    
      
  // #define SQLITE_IOERR_SHMMAP (SQLITE_IOERR | (21<<8))    
  static const int SQLITE_IOERR_SHMMAP = 5386;    
      
  // #define SQLITE_IOERR_SHMOPEN (SQLITE_IOERR | (18<<8))    
  static const int SQLITE_IOERR_SHMOPEN = 4618;    
      
  // #define SQLITE_IOERR_SHMSIZE (SQLITE_IOERR | (19<<8))    
  static const int SQLITE_IOERR_SHMSIZE = 4874;    
      
  // #define SQLITE_IOERR_SHORT_READ (SQLITE_IOERR | (2<<8))    
  static const int SQLITE_IOERR_SHORT_READ = 522;    
      
  // #define SQLITE_IOERR_TRUNCATE (SQLITE_IOERR | (6<<8))    
  static const int SQLITE_IOERR_TRUNCATE = 1546;    
      
  // #define SQLITE_IOERR_UNLOCK (SQLITE_IOERR | (8<<8))    
  static const int SQLITE_IOERR_UNLOCK = 2058;    
      
  // #define SQLITE_IOERR_WRITE (SQLITE_IOERR | (3<<8))    
  static const int SQLITE_IOERR_WRITE = 778;    
      
  // #define SQLITE_LIMIT_ATTACHED 7    
  static const int SQLITE_LIMIT_ATTACHED = 7;    
      
  // #define SQLITE_LIMIT_COLUMN 2    
  static const int SQLITE_LIMIT_COLUMN = 2;    
      
  // #define SQLITE_LIMIT_COMPOUND_SELECT 4    
  static const int SQLITE_LIMIT_COMPOUND_SELECT = 4;    
      
  // #define SQLITE_LIMIT_EXPR_DEPTH 3    
  static const int SQLITE_LIMIT_EXPR_DEPTH = 3;    
      
  // #define SQLITE_LIMIT_FUNCTION_ARG 6    
  static const int SQLITE_LIMIT_FUNCTION_ARG = 6;    
      
  // #define SQLITE_LIMIT_LENGTH 0    
  static const int SQLITE_LIMIT_LENGTH = 0;    
      
  // #define SQLITE_LIMIT_LIKE_PATTERN_LENGTH 8    
  static const int SQLITE_LIMIT_LIKE_PATTERN_LENGTH = 8;    
      
  // #define SQLITE_LIMIT_SQL_LENGTH 1    
  static const int SQLITE_LIMIT_SQL_LENGTH = 1;    
      
  // #define SQLITE_LIMIT_TRIGGER_DEPTH 10    
  static const int SQLITE_LIMIT_TRIGGER_DEPTH = 10;    
      
  // #define SQLITE_LIMIT_VARIABLE_NUMBER 9    
  static const int SQLITE_LIMIT_VARIABLE_NUMBER = 9;    
      
  // #define SQLITE_LIMIT_VDBE_OP 5    
  static const int SQLITE_LIMIT_VDBE_OP = 5;    
      
  // #define SQLITE_LIMIT_WORKER_THREADS 11    
  static const int SQLITE_LIMIT_WORKER_THREADS = 11;    
      
  // #define SQLITE_LOCKED 6    
  static const int SQLITE_LOCKED = 6;    
      
  // #define SQLITE_LOCKED_SHAREDCACHE (SQLITE_LOCKED |  (1<<8))    
  static const int SQLITE_LOCKED_SHAREDCACHE = 262;    
      
  // #define SQLITE_LOCK_EXCLUSIVE 4    
  static const int SQLITE_LOCK_EXCLUSIVE = 4;    
      
  // #define SQLITE_LOCK_NONE 0    
  static const int SQLITE_LOCK_NONE = 0;    
      
  // #define SQLITE_LOCK_PENDING 3    
  static const int SQLITE_LOCK_PENDING = 3;    
      
  // #define SQLITE_LOCK_RESERVED 2    
  static const int SQLITE_LOCK_RESERVED = 2;    
      
  // #define SQLITE_LOCK_SHARED 1    
  static const int SQLITE_LOCK_SHARED = 1;    
      
  // #define SQLITE_MISMATCH 20    
  static const int SQLITE_MISMATCH = 20;    
      
  // #define SQLITE_MISUSE 21    
  static const int SQLITE_MISUSE = 21;    
      
  // #define SQLITE_MUTEX_FAST 0    
  static const int SQLITE_MUTEX_FAST = 0;    
      
  // #define SQLITE_MUTEX_RECURSIVE 1    
  static const int SQLITE_MUTEX_RECURSIVE = 1;    
      
  // #define SQLITE_MUTEX_STATIC_APP1 8    
  static const int SQLITE_MUTEX_STATIC_APP1 = 8;    
      
  // #define SQLITE_MUTEX_STATIC_APP2 9    
  static const int SQLITE_MUTEX_STATIC_APP2 = 9;    
      
  // #define SQLITE_MUTEX_STATIC_APP3 10    
  static const int SQLITE_MUTEX_STATIC_APP3 = 10;    
      
  // #define SQLITE_MUTEX_STATIC_LRU 6    
  static const int SQLITE_MUTEX_STATIC_LRU = 6;    
      
  // #define SQLITE_MUTEX_STATIC_LRU2 7    
  static const int SQLITE_MUTEX_STATIC_LRU2 = 7;    
      
  // #define SQLITE_MUTEX_STATIC_MASTER 2    
  static const int SQLITE_MUTEX_STATIC_MASTER = 2;    
      
  // #define SQLITE_MUTEX_STATIC_MEM 3    
  static const int SQLITE_MUTEX_STATIC_MEM = 3;    
      
  // #define SQLITE_MUTEX_STATIC_MEM2 4    
  static const int SQLITE_MUTEX_STATIC_MEM2 = 4;    
      
  // #define SQLITE_MUTEX_STATIC_OPEN 4    
  static const int SQLITE_MUTEX_STATIC_OPEN = 4;    
      
  // #define SQLITE_MUTEX_STATIC_PMEM 7    
  static const int SQLITE_MUTEX_STATIC_PMEM = 7;    
      
  // #define SQLITE_MUTEX_STATIC_PRNG 5    
  static const int SQLITE_MUTEX_STATIC_PRNG = 5;    
      
  // #define SQLITE_MUTEX_STATIC_VFS1 11    
  static const int SQLITE_MUTEX_STATIC_VFS1 = 11;    
      
  // #define SQLITE_MUTEX_STATIC_VFS2 12    
  static const int SQLITE_MUTEX_STATIC_VFS2 = 12;    
      
  // #define SQLITE_MUTEX_STATIC_VFS3 13    
  static const int SQLITE_MUTEX_STATIC_VFS3 = 13;    
      
  // #define SQLITE_NOLFS 22    
  static const int SQLITE_NOLFS = 22;    
      
  // #define SQLITE_NOMEM 7    
  static const int SQLITE_NOMEM = 7;    
      
  // #define SQLITE_NOTADB 26    
  static const int SQLITE_NOTADB = 26;    
      
  // #define SQLITE_NOTFOUND 12    
  static const int SQLITE_NOTFOUND = 12;    
      
  // #define SQLITE_NOTICE 27    
  static const int SQLITE_NOTICE = 27;    
      
  // #define SQLITE_NOTICE_RECOVER_ROLLBACK (SQLITE_NOTICE | (2<<8))    
  static const int SQLITE_NOTICE_RECOVER_ROLLBACK = 539;    
      
  // #define SQLITE_NOTICE_RECOVER_WAL (SQLITE_NOTICE | (1<<8))    
  static const int SQLITE_NOTICE_RECOVER_WAL = 283;    
      
  // #define SQLITE_NULL 5    
  static const int SQLITE_NULL = 5;    
      
  // #define SQLITE_OK 0    
  static const int SQLITE_OK = 0;    
      
  // #define SQLITE_OPEN_AUTOPROXY 0x00000020    
  static const int SQLITE_OPEN_AUTOPROXY = 32;    
      
  // #define SQLITE_OPEN_CREATE 0x00000004    
  static const int SQLITE_OPEN_CREATE = 4;    
      
  // #define SQLITE_OPEN_DELETEONCLOSE 0x00000008    
  static const int SQLITE_OPEN_DELETEONCLOSE = 8;    
      
  // #define SQLITE_OPEN_EXCLUSIVE 0x00000010    
  static const int SQLITE_OPEN_EXCLUSIVE = 16;    
      
  // #define SQLITE_OPEN_FULLMUTEX 0x00010000    
  static const int SQLITE_OPEN_FULLMUTEX = 65536;    
      
  // #define SQLITE_OPEN_MAIN_DB 0x00000100    
  static const int SQLITE_OPEN_MAIN_DB = 256;    
      
  // #define SQLITE_OPEN_MAIN_JOURNAL 0x00000800    
  static const int SQLITE_OPEN_MAIN_JOURNAL = 2048;    
      
  // #define SQLITE_OPEN_MASTER_JOURNAL 0x00004000    
  static const int SQLITE_OPEN_MASTER_JOURNAL = 16384;    
      
  // #define SQLITE_OPEN_MEMORY 0x00000080    
  static const int SQLITE_OPEN_MEMORY = 128;    
      
  // #define SQLITE_OPEN_NOMUTEX 0x00008000    
  static const int SQLITE_OPEN_NOMUTEX = 32768;    
      
  // #define SQLITE_OPEN_PRIVATECACHE 0x00040000    
  static const int SQLITE_OPEN_PRIVATECACHE = 262144;    
      
  // #define SQLITE_OPEN_READONLY 0x00000001    
  static const int SQLITE_OPEN_READONLY = 1;    
      
  // #define SQLITE_OPEN_READWRITE 0x00000002    
  static const int SQLITE_OPEN_READWRITE = 2;    
      
  // #define SQLITE_OPEN_SHAREDCACHE 0x00020000    
  static const int SQLITE_OPEN_SHAREDCACHE = 131072;    
      
  // #define SQLITE_OPEN_SUBJOURNAL 0x00002000    
  static const int SQLITE_OPEN_SUBJOURNAL = 8192;    
      
  // #define SQLITE_OPEN_TEMP_DB 0x00000200    
  static const int SQLITE_OPEN_TEMP_DB = 512;    
      
  // #define SQLITE_OPEN_TEMP_JOURNAL 0x00001000    
  static const int SQLITE_OPEN_TEMP_JOURNAL = 4096;    
      
  // #define SQLITE_OPEN_TRANSIENT_DB 0x00000400    
  static const int SQLITE_OPEN_TRANSIENT_DB = 1024;    
      
  // #define SQLITE_OPEN_URI 0x00000040    
  static const int SQLITE_OPEN_URI = 64;    
      
  // #define SQLITE_OPEN_WAL 0x00080000    
  static const int SQLITE_OPEN_WAL = 524288;    
      
  // #define SQLITE_PERM 3    
  static const int SQLITE_PERM = 3;    
      
  // #define SQLITE_PRAGMA 19    
  static const int SQLITE_PRAGMA = 19;    
      
  // #define SQLITE_PROTOCOL 15    
  static const int SQLITE_PROTOCOL = 15;    
      
  // #define SQLITE_RANGE 25    
  static const int SQLITE_RANGE = 25;    
      
  // #define SQLITE_READ 20    
  static const int SQLITE_READ = 20;    
      
  // #define SQLITE_READONLY 8    
  static const int SQLITE_READONLY = 8;    
      
  // #define SQLITE_READONLY_CANTLOCK (SQLITE_READONLY | (2<<8))    
  static const int SQLITE_READONLY_CANTLOCK = 520;    
      
  // #define SQLITE_READONLY_DBMOVED (SQLITE_READONLY | (4<<8))    
  static const int SQLITE_READONLY_DBMOVED = 1032;    
      
  // #define SQLITE_READONLY_RECOVERY (SQLITE_READONLY | (1<<8))    
  static const int SQLITE_READONLY_RECOVERY = 264;    
      
  // #define SQLITE_READONLY_ROLLBACK (SQLITE_READONLY | (3<<8))    
  static const int SQLITE_READONLY_ROLLBACK = 776;    
      
  // #define SQLITE_RECURSIVE 33    
  static const int SQLITE_RECURSIVE = 33;    
      
  // #define SQLITE_REINDEX 27    
  static const int SQLITE_REINDEX = 27;    
      
  // #define SQLITE_REPLACE 5    
  static const int SQLITE_REPLACE = 5;    
      
  // #define SQLITE_ROLLBACK 1    
  static const int SQLITE_ROLLBACK = 1;    
      
  // #define SQLITE_ROW 100    
  static const int SQLITE_ROW = 100;    
      
  // #define SQLITE_SAVEPOINT 32    
  static const int SQLITE_SAVEPOINT = 32;    
      
  // #define SQLITE_SCANSTAT_EST 2    
  static const int SQLITE_SCANSTAT_EST = 2;    
      
  // #define SQLITE_SCANSTAT_EXPLAIN 4    
  static const int SQLITE_SCANSTAT_EXPLAIN = 4;    
      
  // #define SQLITE_SCANSTAT_NAME 3    
  static const int SQLITE_SCANSTAT_NAME = 3;    
      
  // #define SQLITE_SCANSTAT_NLOOP 0    
  static const int SQLITE_SCANSTAT_NLOOP = 0;    
      
  // #define SQLITE_SCANSTAT_NVISIT 1    
  static const int SQLITE_SCANSTAT_NVISIT = 1;    
      
  // #define SQLITE_SCANSTAT_SELECTID 5    
  static const int SQLITE_SCANSTAT_SELECTID = 5;    
      
  // #define SQLITE_SCHEMA 17    
  static const int SQLITE_SCHEMA = 17;    
      
  // #define SQLITE_SELECT 21    
  static const int SQLITE_SELECT = 21;    
      
  // #define SQLITE_SHM_EXCLUSIVE 8    
  static const int SQLITE_SHM_EXCLUSIVE = 8;    
      
  // #define SQLITE_SHM_LOCK 2    
  static const int SQLITE_SHM_LOCK = 2;    
      
  // #define SQLITE_SHM_NLOCK 8    
  static const int SQLITE_SHM_NLOCK = 8;    
      
  // #define SQLITE_SHM_SHARED 4    
  static const int SQLITE_SHM_SHARED = 4;    
      
  // #define SQLITE_SHM_UNLOCK 1    
  static const int SQLITE_SHM_UNLOCK = 1;    
      
  // #define SQLITE_STATIC 0    
  static const int SQLITE_STATIC = 0;    
      
  // #define SQLITE_STATUS_MALLOC_COUNT 9    
  static const int SQLITE_STATUS_MALLOC_COUNT = 9;    
      
  // #define SQLITE_STATUS_MALLOC_SIZE 5    
  static const int SQLITE_STATUS_MALLOC_SIZE = 5;    
      
  // #define SQLITE_STATUS_MEMORY_USED 0    
  static const int SQLITE_STATUS_MEMORY_USED = 0;    
      
  // #define SQLITE_STATUS_PAGECACHE_OVERFLOW 2    
  static const int SQLITE_STATUS_PAGECACHE_OVERFLOW = 2;    
      
  // #define SQLITE_STATUS_PAGECACHE_SIZE 7    
  static const int SQLITE_STATUS_PAGECACHE_SIZE = 7;    
      
  // #define SQLITE_STATUS_PAGECACHE_USED 1    
  static const int SQLITE_STATUS_PAGECACHE_USED = 1;    
      
  // #define SQLITE_STATUS_PARSER_STACK 6    
  static const int SQLITE_STATUS_PARSER_STACK = 6;    
      
  // #define SQLITE_STATUS_SCRATCH_OVERFLOW 4    
  static const int SQLITE_STATUS_SCRATCH_OVERFLOW = 4;    
      
  // #define SQLITE_STATUS_SCRATCH_SIZE 8    
  static const int SQLITE_STATUS_SCRATCH_SIZE = 8;    
      
  // #define SQLITE_STATUS_SCRATCH_USED 3    
  static const int SQLITE_STATUS_SCRATCH_USED = 3;    
      
  // #define SQLITE_STMTSTATUS_AUTOINDEX 3    
  static const int SQLITE_STMTSTATUS_AUTOINDEX = 3;    
      
  // #define SQLITE_STMTSTATUS_FULLSCAN_STEP 1    
  static const int SQLITE_STMTSTATUS_FULLSCAN_STEP = 1;    
      
  // #define SQLITE_STMTSTATUS_SORT 2    
  static const int SQLITE_STMTSTATUS_SORT = 2;    
      
  // #define SQLITE_STMTSTATUS_VM_STEP 4    
  static const int SQLITE_STMTSTATUS_VM_STEP = 4;    
      
  // #define SQLITE_SYNC_DATAONLY 0x00010    
  static const int SQLITE_SYNC_DATAONLY = 16;    
      
  // #define SQLITE_SYNC_FULL 0x00003    
  static const int SQLITE_SYNC_FULL = 3;    
      
  // #define SQLITE_SYNC_NORMAL 0x00002    
  static const int SQLITE_SYNC_NORMAL = 2;    
      
  // #define SQLITE_TESTCTRL_ALWAYS 13    
  static const int SQLITE_TESTCTRL_ALWAYS = 13;    
      
  // #define SQLITE_TESTCTRL_ASSERT 12    
  static const int SQLITE_TESTCTRL_ASSERT = 12;    
      
  // #define SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS 10    
  static const int SQLITE_TESTCTRL_BENIGN_MALLOC_HOOKS = 10;    
      
  // #define SQLITE_TESTCTRL_BITVEC_TEST 8    
  static const int SQLITE_TESTCTRL_BITVEC_TEST = 8;    
      
  // #define SQLITE_TESTCTRL_BYTEORDER 22    
  static const int SQLITE_TESTCTRL_BYTEORDER = 22;    
      
  // #define SQLITE_TESTCTRL_EXPLAIN_STMT 19    
  static const int SQLITE_TESTCTRL_EXPLAIN_STMT = 19;    
      
  // #define SQLITE_TESTCTRL_FAULT_INSTALL 9    
  static const int SQLITE_TESTCTRL_FAULT_INSTALL = 9;    
      
  // #define SQLITE_TESTCTRL_FIRST 5    
  static const int SQLITE_TESTCTRL_FIRST = 5;    
      
  // #define SQLITE_TESTCTRL_IMPOSTER 25    
  static const int SQLITE_TESTCTRL_IMPOSTER = 25;    
      
  // #define SQLITE_TESTCTRL_ISINIT 23    
  static const int SQLITE_TESTCTRL_ISINIT = 23;    
      
  // #define SQLITE_TESTCTRL_ISKEYWORD 16    
  static const int SQLITE_TESTCTRL_ISKEYWORD = 16;    
      
  // #define SQLITE_TESTCTRL_LAST 25    
  static const int SQLITE_TESTCTRL_LAST = 25;    
      
  // #define SQLITE_TESTCTRL_LOCALTIME_FAULT 18    
  static const int SQLITE_TESTCTRL_LOCALTIME_FAULT = 18;    
      
  // #define SQLITE_TESTCTRL_NEVER_CORRUPT 20    
  static const int SQLITE_TESTCTRL_NEVER_CORRUPT = 20;    
      
  // #define SQLITE_TESTCTRL_OPTIMIZATIONS 15    
  static const int SQLITE_TESTCTRL_OPTIMIZATIONS = 15;    
      
  // #define SQLITE_TESTCTRL_PENDING_BYTE 11    
  static const int SQLITE_TESTCTRL_PENDING_BYTE = 11;    
      
  // #define SQLITE_TESTCTRL_PRNG_RESET 7    
  static const int SQLITE_TESTCTRL_PRNG_RESET = 7;    
      
  // #define SQLITE_TESTCTRL_PRNG_RESTORE 6    
  static const int SQLITE_TESTCTRL_PRNG_RESTORE = 6;    
      
  // #define SQLITE_TESTCTRL_PRNG_SAVE 5    
  static const int SQLITE_TESTCTRL_PRNG_SAVE = 5;    
      
  // #define SQLITE_TESTCTRL_RESERVE 14    
  static const int SQLITE_TESTCTRL_RESERVE = 14;    
      
  // #define SQLITE_TESTCTRL_SCRATCHMALLOC 17    
  static const int SQLITE_TESTCTRL_SCRATCHMALLOC = 17;    
      
  // #define SQLITE_TESTCTRL_SORTER_MMAP 24    
  static const int SQLITE_TESTCTRL_SORTER_MMAP = 24;    
      
  // #define SQLITE_TESTCTRL_VDBE_COVERAGE 21    
  static const int SQLITE_TESTCTRL_VDBE_COVERAGE = 21;    
      
  // #define SQLITE_TOOBIG 18    
  static const int SQLITE_TOOBIG = 18;    
      
  // #define SQLITE_TRANSACTION 22    
  static const int SQLITE_TRANSACTION = 22;    
      
  // #define SQLITE_TRANSIENT -1    
  static const int SQLITE_TRANSIENT = -1;    
      
  // #define SQLITE_UPDATE 23    
  static const int SQLITE_UPDATE = 23;    
      
  // #define SQLITE_UTF16 4    
  static const int SQLITE_UTF16 = 4;    
      
  // #define SQLITE_UTF16BE 3    
  static const int SQLITE_UTF16BE = 3;    
      
  // #define SQLITE_UTF16LE 2    
  static const int SQLITE_UTF16LE = 2;    
      
  // #define SQLITE_UTF16_ALIGNED 8    
  static const int SQLITE_UTF16_ALIGNED = 8;    
      
  // #define SQLITE_UTF8 1    
  static const int SQLITE_UTF8 = 1;    
      
  // #define SQLITE_VTAB_CONSTRAINT_SUPPORT 1    
  static const int SQLITE_VTAB_CONSTRAINT_SUPPORT = 1;    
      
  // #define SQLITE_WARNING 28    
  static const int SQLITE_WARNING = 28;    
      
  // #define SQLITE_WARNING_AUTOINDEX (SQLITE_WARNING | (1<<8))    
  static const int SQLITE_WARNING_AUTOINDEX = 284;    
      
  DynamicLibrary _library;
  
  /**
   *
   */
  Sqlite3Bindings(DynamicLibrary library) { 
    var headers = <String>["sqlite3.h"];
    var types = library.types;
    var helper = new BinaryTypeHelper(types); 
    for (var header in headers) {
      helper.declare(header);    
    }
  
    library.link(headers);
    _library = library;
  }
  
  /**
   * int sqlite3_bind_blob(sqlite3_stmt *, int, void *, int, void (*f)(void *))
   */
  int sqlite3_bind_blob(arg0, int arg1, arg2, int n, f) {
    return _library.invoke("sqlite3_bind_blob", [arg0, arg1, arg2, n, f]);
  }
  
  /**
   * int sqlite3_bind_double(sqlite3_stmt *, int, double)
   */
  int sqlite3_bind_double(arg0, int arg1, double arg2) {
    return _library.invoke("sqlite3_bind_double", [arg0, arg1, arg2]);
  }
  
  /**
   * int sqlite3_bind_int(sqlite3_stmt *, int, int)
   */
  int sqlite3_bind_int(arg0, int arg1, int arg2) {
    return _library.invoke("sqlite3_bind_int", [arg0, arg1, arg2]);
  }
  
  /**
   * int sqlite3_bind_int64(sqlite3_stmt *, int, sqlite3_int64)
   */
  int sqlite3_bind_int64(arg0, int arg1, int arg2) {
    return _library.invoke("sqlite3_bind_int64", [arg0, arg1, arg2]);
  }
  
  /**
   * int sqlite3_bind_null(sqlite3_stmt *, int)
   */
  int sqlite3_bind_null(arg0, int arg1) {
    return _library.invoke("sqlite3_bind_null", [arg0, arg1]);
  }
  
  /**
   * int sqlite3_bind_text(sqlite3_stmt *, int, char *, int, void (*f)(void *))
   */
  int sqlite3_bind_text(arg0, int arg1, arg2, int arg3, f) {
    return _library.invoke("sqlite3_bind_text", [arg0, arg1, arg2, arg3, f]);
  }
  
  /**
   * int sqlite3_bind_text16(sqlite3_stmt *, int, void *, int, void (*f)(void *))
   */
  int sqlite3_bind_text16(arg0, int arg1, arg2, int arg3, f) {
    return _library.invoke("sqlite3_bind_text16", [arg0, arg1, arg2, arg3, f]);
  }
  
  /**
   * int sqlite3_bind_value(sqlite3_stmt *, int, sqlite3_value *)
   */
  int sqlite3_bind_value(arg0, int arg1, arg2) {
    return _library.invoke("sqlite3_bind_value", [arg0, arg1, arg2]);
  }
  
  /**
   * int sqlite3_bind_zeroblob(sqlite3_stmt *, int, int)
   */
  int sqlite3_bind_zeroblob(arg0, int arg1, int n) {
    return _library.invoke("sqlite3_bind_zeroblob", [arg0, arg1, n]);
  }
  
  /**
   * int sqlite3_changes(sqlite3 *)
   */
  int sqlite3_changes(arg0) {
    return _library.invoke("sqlite3_changes", [arg0]);
  }
  
  /**
   * int sqlite3_close(sqlite3 *)
   */
  int sqlite3_close(arg0) {
    return _library.invoke("sqlite3_close", [arg0]);
  }
  
  /**
   * int sqlite3_close_v2(sqlite3 *)
   */
  int sqlite3_close_v2(arg0) {
    return _library.invoke("sqlite3_close_v2", [arg0]);
  }
  
  /**
   * void * sqlite3_column_blob(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_blob(arg0, int iCol) {
    return _library.invoke("sqlite3_column_blob", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_column_bytes(sqlite3_stmt *, int)
   */
  int sqlite3_column_bytes(arg0, int iCol) {
    return _library.invoke("sqlite3_column_bytes", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_column_bytes16(sqlite3_stmt *, int)
   */
  int sqlite3_column_bytes16(arg0, int iCol) {
    return _library.invoke("sqlite3_column_bytes16", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_column_count(sqlite3_stmt *)
   */
  int sqlite3_column_count(pStmt) {
    return _library.invoke("sqlite3_column_count", [pStmt]);
  }
  
  /**
   * double sqlite3_column_double(sqlite3_stmt *, int)
   */
  double sqlite3_column_double(arg0, int iCol) {
    return _library.invoke("sqlite3_column_double", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_column_int(sqlite3_stmt *, int)
   */
  int sqlite3_column_int(arg0, int iCol) {
    return _library.invoke("sqlite3_column_int", [arg0, iCol]);
  }
  
  /**
   * sqlite3_int64 sqlite3_column_int64(sqlite3_stmt *, int)
   */
  int sqlite3_column_int64(arg0, int iCol) {
    return _library.invoke("sqlite3_column_int64", [arg0, iCol]);
  }
  
  /**
   * char * sqlite3_column_name(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_name(arg0, int N) {
    return _library.invoke("sqlite3_column_name", [arg0, N]);
  }
  
  /**
   * void * sqlite3_column_name16(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_name16(arg0, int N) {
    return _library.invoke("sqlite3_column_name16", [arg0, N]);
  }
  
  /**
   * unsigned char * sqlite3_column_text(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_text(arg0, int iCol) {
    return _library.invoke("sqlite3_column_text", [arg0, iCol]);
  }
  
  /**
   * void * sqlite3_column_text16(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_text16(arg0, int iCol) {
    return _library.invoke("sqlite3_column_text16", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_column_type(sqlite3_stmt *, int)
   */
  int sqlite3_column_type(arg0, int iCol) {
    return _library.invoke("sqlite3_column_type", [arg0, iCol]);
  }
  
  /**
   * sqlite3_value * sqlite3_column_value(sqlite3_stmt *, int)
   */
  BinaryData sqlite3_column_value(arg0, int iCol) {
    return _library.invoke("sqlite3_column_value", [arg0, iCol]);
  }
  
  /**
   * int sqlite3_data_count(sqlite3_stmt *)
   */
  int sqlite3_data_count(pStmt) {
    return _library.invoke("sqlite3_data_count", [pStmt]);
  }
  
  /**
   * int sqlite3_errcode(sqlite3 *)
   */
  int sqlite3_errcode(db) {
    return _library.invoke("sqlite3_errcode", [db]);
  }
  
  /**
   * char * sqlite3_errmsg(sqlite3 *)
   */
  BinaryData sqlite3_errmsg(arg0) {
    return _library.invoke("sqlite3_errmsg", [arg0]);
  }
  
  /**
   * void * sqlite3_errmsg16(sqlite3 *)
   */
  BinaryData sqlite3_errmsg16(arg0) {
    return _library.invoke("sqlite3_errmsg16", [arg0]);
  }
  
  /**
   * char * sqlite3_errstr(int)
   */
  BinaryData sqlite3_errstr(int arg0) {
    return _library.invoke("sqlite3_errstr", [arg0]);
  }
  
  /**
   * int sqlite3_exec(sqlite3 *, char *, int (*callback)(void *, int, char **, char **), void *, char **)
   */
  int sqlite3_exec(arg0, sql, callback, arg1, errmsg) {
    return _library.invoke("sqlite3_exec", [arg0, sql, callback, arg1, errmsg]);
  }
  
  /**
   * int sqlite3_extended_errcode(sqlite3 *)
   */
  int sqlite3_extended_errcode(db) {
    return _library.invoke("sqlite3_extended_errcode", [db]);
  }
  
  /**
   * int sqlite3_finalize(sqlite3_stmt *)
   */
  int sqlite3_finalize(pStmt) {
    return _library.invoke("sqlite3_finalize", [pStmt]);
  }
  
  /**
   * void sqlite3_free(void *)
   */
  void sqlite3_free(arg0) {
    return _library.invoke("sqlite3_free", [arg0]);
  }
  
  /**
   * sqlite3_int64 sqlite3_last_insert_rowid(sqlite3 *)
   */
  int sqlite3_last_insert_rowid(arg0) {
    return _library.invoke("sqlite3_last_insert_rowid", [arg0]);
  }
  
  /**
   * char * sqlite3_libversion()
   */
  BinaryData sqlite3_libversion() {
    return _library.invoke("sqlite3_libversion", []);
  }
  
  /**
   * int sqlite3_libversion_number()
   */
  int sqlite3_libversion_number() {
    return _library.invoke("sqlite3_libversion_number", []);
  }
  
  /**
   * int sqlite3_open(char *, sqlite3 **)
   */
  int sqlite3_open(filename, ppDb) {
    return _library.invoke("sqlite3_open", [filename, ppDb]);
  }
  
  /**
   * int sqlite3_open16(void *, sqlite3 **)
   */
  int sqlite3_open16(filename, ppDb) {
    return _library.invoke("sqlite3_open16", [filename, ppDb]);
  }
  
  /**
   * int sqlite3_open_v2(char *, sqlite3 **, int, char *)
   */
  int sqlite3_open_v2(filename, ppDb, int flags, zVfs) {
    return _library.invoke("sqlite3_open_v2", [filename, ppDb, flags, zVfs]);
  }
  
  /**
   * int sqlite3_prepare(sqlite3 *, char *, int, sqlite3_stmt **, char **)
   */
  int sqlite3_prepare(db, zSql, int nByte, ppStmt, pzTail) {
    return _library.invoke("sqlite3_prepare", [db, zSql, nByte, ppStmt, pzTail]);
  }
  
  /**
   * int sqlite3_prepare16(sqlite3 *, void *, int, sqlite3_stmt **, void **)
   */
  int sqlite3_prepare16(db, zSql, int nByte, ppStmt, pzTail) {
    return _library.invoke("sqlite3_prepare16", [db, zSql, nByte, ppStmt, pzTail]);
  }
  
  /**
   * int sqlite3_prepare16_v2(sqlite3 *, void *, int, sqlite3_stmt **, void **)
   */
  int sqlite3_prepare16_v2(db, zSql, int nByte, ppStmt, pzTail) {
    return _library.invoke("sqlite3_prepare16_v2", [db, zSql, nByte, ppStmt, pzTail]);
  }
  
  /**
   * int sqlite3_prepare_v2(sqlite3 *, char *, int, sqlite3_stmt **, char **)
   */
  int sqlite3_prepare_v2(db, zSql, int nByte, ppStmt, pzTail) {
    return _library.invoke("sqlite3_prepare_v2", [db, zSql, nByte, ppStmt, pzTail]);
  }
  
  /**
   * int sqlite3_reset(sqlite3_stmt *)
   */
  int sqlite3_reset(pStmt) {
    return _library.invoke("sqlite3_reset", [pStmt]);
  }
  
  /**
   * char * sqlite3_sourceid()
   */
  BinaryData sqlite3_sourceid() {
    return _library.invoke("sqlite3_sourceid", []);
  }
  
  /**
   * int sqlite3_step(sqlite3_stmt *)
   */
  int sqlite3_step(arg0) {
    return _library.invoke("sqlite3_step", [arg0]);
  }
  
}

